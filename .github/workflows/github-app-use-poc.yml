name: Github App Use POC

on:
  workflow_dispatch:
  push:
    branches:
      - issue-11298-poc
  #schedule:
  #- cron: '0 0 * * 0'
  #

permissions:
  contents: write
  pull-requests: write
  id-token: write

env:
  RATE_LIMIT_THRESHOLD: 14000

jobs:

  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@12a917de9a58ae636662b77848b59cbe7be27bea # working-version
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}

  run-app:
    name: Calls Github App & Check API usage
    runs-on: ubuntu-latest
    needs: fetch-secrets


    env:
      DEBUG: false
      DRY_RUN: false
      ORG: ministryofjustice
      PREFIX: modernisation-platform
      SKIP_BRANCHES: main
      INACTIVE_DAYS: 90

    steps:
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@12a917de9a58ae636662b77848b59cbe7be27bea # working-version
        with:
          terraform_github_token: ${{ needs.fetch-secrets.outputs.terraform_github_token }}
          mp_github_app_private_key: ${{ needs.fetch-secrets.outputs.mp_github_app_private_key }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Create GitHub App token
        id: app
        uses: actions/create-github-app-token@v2
        with:
          app-id: "2013696"                
          private-key: ${{ env.MP_GITHUB_APP_PRIVATE_KEY }} 
          owner: "ministryofjustice"
          repositories: "modernisation-platform"

      - name: Authenticate GitHub CLI as the App
        env:
          GH_TOKEN: ${{ steps.app.outputs.token }}
        run: |
          # gh automatically uses GH_TOKEN if set — no `gh auth login` needed
          gh auth status

      - name: Query GitHub API rate limit
        id: ratelimit
        env:
          APP_TOKEN: ${{ steps.app.outputs.token }}
        run: |
          echo "Fetching API rate limit for App installation..."
          RESPONSE=$(curl -s \
            -H "Authorization: Bearer $APP_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/rate_limit)

          echo "$RESPONSE" | jq '.resources.core'

          RESET_EPOCH=$(echo "$RESPONSE" | jq '.resources.core.reset')
          RESET_UTC=$(date -u -d @"$RESET_EPOCH" '+%Y-%m-%d %H:%M:%S UTC')
          echo "Rate limit resets at: $RESET_UTC"


          USED=$(echo "$RESPONSE" | jq '.resources.core.used')
          if [ "$USED" -gt "$RATE_LIMIT_THRESHOLD" ]; then
            echo "❌ Rate limit usage above threshold ($USED > $RATE_LIMIT_THRESHOLD). Exiting."
            exit 1
          else
            echo "✅ Rate limit usage within threshold ($USED ≤ $RATE_LIMIT_THRESHOLD)."
          fi