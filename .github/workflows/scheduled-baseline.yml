name: "Terraform: scheduled baseline"

on:
  schedule:
    - cron: "30 22 * * 0"
  push:
    branches:
      - main
    paths:
      - '.github/workflows/scheduled-baseline.yml'
      - 'terraform/environments/bootstrap/**'
      - '!**.md'
      - 'scripts/update-sso-permission-sets.sh'
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: true
  AWS_REGION: "eu-west-2"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

defaults:
  run:
    shell: bash

concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@e3ccf33927794ce5350b9211e288ad84e69365a8 # v3.4.4
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}
  setup-prerequisites:
    runs-on: ubuntu-latest
    needs: fetch-secrets
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      run-delegate-access: ${{ steps.changes.outputs.run-delegate-access }}
      run-member-bootstrap: ${{ steps.changes.outputs.run-member-bootstrap }}
      run-secure-baselines: ${{ steps.changes.outputs.run-secure-baselines }}
      run-single-sign-on: ${{ steps.changes.outputs.run-single-sign-on }}
      run-workflow-jobs: ${{ steps.changes.outputs.run-workflow-jobs }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with: 
          fetch-depth: 0
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@e3ccf33927794ce5350b9211e288ad84e69365a8 # v3.4.4
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.aws_organizations_root_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/ModernisationPlatformGithubActionsRole"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - run: bash scripts/terraform-init.sh terraform/environments/bootstrap/delegate-access
      - id: set-matrix
        name: Set Up Matrix
        run: echo "matrix=$(terraform -chdir=terraform/environments/bootstrap/delegate-access workspace list | sed -e "s/*//" -e "s/^[[:space:]]*//" -e "/default/d" -e "/^$/d" | sort -u | jq -ncR '[inputs]')" >> $GITHUB_OUTPUT
      - name: Check for relevant changes
        id: changes
        run: |
          CHANGES=$(git diff --name-only HEAD~1 HEAD)
          declare -A DIRS=(
            [run-delegate-access]="terraform/environments/bootstrap/delegate-access/"
            [run-member-bootstrap]="terraform/environments/bootstrap/member-bootstrap/"
            [run-secure-baselines]="terraform/environments/bootstrap/secure-baselines/"
            [run-single-sign-on]="terraform/environments/bootstrap/single-sign-on/"
            [run-workflow-jobs]=".github/workflows/scheduled-baseline.yml"
          )
          for key in "${!DIRS[@]}"; do
            if grep -q "${DIRS[$key]}" <<< "$CHANGES"; then
              echo "$key=true" >> $GITHUB_OUTPUT
            fi
          done
     
  delegate-access:
    strategy:
      fail-fast: false
      matrix:
        workspaces: ${{ fromJSON(needs.setup-prerequisites.outputs.matrix) }}
    runs-on: ubuntu-latest
    needs: [fetch-secrets,setup-prerequisites]
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      needs.setup-prerequisites.outputs.run-delegate-access == 'true' ||
      needs.setup-prerequisites.outputs.run-workflow-jobs == 'true'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@e3ccf33927794ce5350b9211e288ad84e69365a8 # v3.4.4
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.aws_organizations_root_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/ModernisationPlatformGithubActionsRole"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - run: bash scripts/terraform-init.sh terraform/environments/bootstrap/delegate-access
      - run: bash scripts/terraform-apply.sh terraform/environments/bootstrap/delegate-access
      - name: Persist terraform state to backend
        if: ${{ failure() && hashFiles('terraform/environments/bootstrap/delegate-access/errored.tfstate') != '' }}
        run: |
          bash scripts/terraform-state-push.sh terraform/environments/bootstrap/delegate-access
          if [ $? -eq 0 ]; then
            echo "STATE_PUSH_SUCCESSFUL=true" >> $GITHUB_ENV
          fi
      - name: Slack failure notification
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}
    env:
     TF_WORKSPACE: ${{ matrix.workspaces }}
     STATE_PUSH_SUCCESSFUL: false

  secure-baselines:
    strategy:
      fail-fast: false
      matrix:
        workspaces: ${{ fromJSON(needs.setup-prerequisites.outputs.matrix) }}
    runs-on: ubuntu-latest
    needs: [fetch-secrets,setup-prerequisites, delegate-access]
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      ((needs.setup-prerequisites.outputs.run-secure-baselines == 'true' || needs.setup-prerequisites.outputs.run-workflow-jobs == 'true') && (always() && (needs.delegate-access.result == 'success' || needs.delegate-access.result == 'skipped')))
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@e3ccf33927794ce5350b9211e288ad84e69365a8 # v3.4.4
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions-apply"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - run: bash scripts/terraform-init.sh terraform/environments/bootstrap/secure-baselines
      - run: bash scripts/terraform-apply.sh terraform/environments/bootstrap/secure-baselines
      - name: Persist terraform state to backend
        if: ${{ failure() && hashFiles('terraform/environments/bootstrap/secure-baselines/errored.tfstate') != '' }}
        run: |
          bash scripts/terraform-state-push.sh terraform/environments/bootstrap/secure-baselines
          if [ $? -eq 0 ]; then
            echo "STATE_PUSH_SUCCESSFUL=true" >> $GITHUB_ENV
          fi
      - name: Slack failure notification
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}
    env:
     TF_WORKSPACE: ${{ matrix.workspaces }}
     STATE_PUSH_SUCCESSFUL: false

  single-sign-on:
    strategy:
      fail-fast: false
      matrix:
        workspaces: ${{ fromJSON(needs.setup-prerequisites.outputs.matrix) }}
    runs-on: ubuntu-latest
    needs: [fetch-secrets,setup-prerequisites, delegate-access]
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      ((needs.setup-prerequisites.outputs.run-single-sign-on == 'true' || needs.setup-prerequisites.outputs.run-workflow-jobs == 'true') && (always() && (needs.delegate-access.result == 'success' || needs.delegate-access.result == 'skipped')))
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@e3ccf33927794ce5350b9211e288ad84e69365a8 # v3.4.4
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions-apply"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - run: bash scripts/terraform-init.sh terraform/environments/bootstrap/single-sign-on
      - run: bash scripts/terraform-apply.sh terraform/environments/bootstrap/single-sign-on
      - name: Persist terraform state to backend
        if: ${{ failure() && hashFiles('terraform/environments/bootstrap/single-sign-on/errored.tfstate') != '' }}
        run: |
          bash scripts/terraform-state-push.sh terraform/environments/bootstrap/single-sign-on
          if [ $? -eq 0 ]; then
            echo "STATE_PUSH_SUCCESSFUL=true" >> $GITHUB_ENV
          fi
      - name: Slack failure notification
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}
    env:
     TF_WORKSPACE: ${{ matrix.workspaces }}
     STATE_PUSH_SUCCESSFUL: false

  member-bootstrap:
    strategy:
      fail-fast: false
      matrix:
        workspaces: ${{ fromJSON(needs.setup-prerequisites.outputs.matrix) }}
    runs-on: ubuntu-latest
    needs: [fetch-secrets,setup-prerequisites, single-sign-on]
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      ((needs.setup-prerequisites.outputs.run-member-bootstrap == 'true' || needs.setup-prerequisites.outputs.run-workflow-jobs == 'true') && (always() && (needs.single-sign-on.result == 'success' || needs.single-sign-on.result == 'skipped')))
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@e3ccf33927794ce5350b9211e288ad84e69365a8 # v3.4.4
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions-apply"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "~1"
          terraform_wrapper: false
      - run: bash scripts/terraform-init.sh terraform/environments/bootstrap/member-bootstrap
      - run: bash scripts/terraform-apply.sh terraform/environments/bootstrap/member-bootstrap
      - name: Persist terraform state to backend
        if: ${{ failure() && hashFiles('terraform/environments/bootstrap/member-bootstrap/errored.tfstate') != '' }}
        run: |
          bash scripts/terraform-state-push.sh terraform/environments/bootstrap/member-bootstrap
          if [ $? -eq 0 ]; then
            echo "STATE_PUSH_SUCCESSFUL=true" >> $GITHUB_ENV
          fi
      - name: Slack failure notification
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}
    env:
     TF_WORKSPACE: ${{ matrix.workspaces }}
     STATE_PUSH_SUCCESSFUL: false

  update-permission-sets:
    runs-on: ubuntu-latest
    needs: [fetch-secrets,delegate-access,single-sign-on]
    if: |
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      needs.setup-prerequisites.outputs.run-workflow-jobs == 'true' ||
      (always() && (needs.single-sign-on.result == 'success' || needs.delegate-access.result == 'success'))
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@e3ccf33927794ce5350b9211e288ad84e69365a8 # v3.4.4
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
      - name: Set Root Account Number
        run: |
          ROOT_ACCOUNT_NUMBER=$(jq -r -e '.aws_organizations_root_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ROOT_ACCOUNT_NUMBER"
          echo ROOT_ACCOUNT_NUMBER=$ROOT_ACCOUNT_NUMBER >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions-apply"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Update permission sets
        run: |
          aws sts assume-role --role-arn "arn:aws:iam::${ROOT_ACCOUNT_NUMBER}:role/ModernisationPlatformSSOAdministrator" --role-session-name ssoadminrolesession > creds
          $(echo "export AWS_ACCESS_KEY_ID=$(echo $(cat creds) | sed -n 's/.*"AccessKeyId": "\([^"]*\)".*/\1/p')")
          $(echo "export AWS_SECRET_ACCESS_KEY=$(echo $(cat creds) | sed -n 's/.*"SecretAccessKey": "\([^"]*\)".*/\1/p')")
          $(echo "export AWS_SESSION_TOKEN=$(echo $(cat creds) | sed -n 's/.*"SessionToken": "\([^"]*\)".*/\1/p')")
          grep "ModernisationPlatformSSOAdministrator" <<< $(aws sts get-caller-identity) || { echo 'Failed to assume role' ; exit 1; }
          bash scripts/update-sso-permission-sets.sh
      - name: Slack failure notification
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}
