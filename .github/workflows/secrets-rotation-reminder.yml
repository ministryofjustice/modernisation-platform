---
name: Secrets Rotation Reminder
on:
  pull_request:
    branches:
      - "main" 
    paths:
      - ".github/workflows/secrets-rotation-reminder.yaml"
  schedule: 
      - cron: '30 11 * * *' # run at 11:30 daily 
  workflow_dispatch:

env:
    AWS_REGION: "eu-west-2"
    SECRET: ${{ secrets.GITHUB_TOKEN }}
    
permissions:
    id-token: write # This is required for requesting the JWT
    contents: read # This is required for actions/checkout
    issues: write # This is required to create issues
    
defaults:
    run:
        shell: bash

jobs:

  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@0442287e70970e2e732fbfecf17fd362d2d21dee # v3.2.6
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}  

  secrets-rotation-reminder:
      runs-on: ubuntu-latest
      needs: fetch-secrets
      steps:
        - name: Checkout Repository
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

        - name: Decrypt Secrets
          uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@0442287e70970e2e732fbfecf17fd362d2d21dee # v3.2.6
          with:
            environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
            modernisation_pat_multirepo: ${{ needs.fetch-secrets.outputs.modernisation_pat_multirepo }}
            PASSPHRASE: ${{ secrets.PASSPHRASE }}          

        - name: Set Account Number
          run: |
            ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)
            echo "::add-mask::$ACCOUNT_NUMBER"
            echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
  
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
          with:
            role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions-apply"
            role-session-name: githubactionsrolesession
            aws-region: ${{ env.AWS_REGION }}
  
        - name: Run Secrets Rotation Reminder Script
          env:
            GH_TOKEN: ${{ env.MODERNISATION_PAT_MULTIREPO}}
          run: |
            # Get the list of secret names from AWS Secrets Manager
            secrets=$(aws secretsmanager list-secrets --region $AWS_REGION --query "SecretList[].Name" --output text)
            
            # Remove secrets from list that are exempt from rotation
            delete=("environment_management" "nuke_account_ids" "nuke_account_blocklist" "mod-platform-circleci" "pagerduty_integration_keys")
            for del in ${delete[@]}
            do
              secrets=("${secrets[@]/$del}")
            done
            
            # Define the threshold in seconds (180 days)
            threshold=$((180 * 24 * 60 * 60))
            
            # Get the current timestamp in seconds
            current_timestamp=$(date +%s)
            
            # Loop through each secret,  check its last changed date and raise issue if required
            for secret in $secrets; do
              last_changed=$(aws secretsmanager list-secret-version-ids --secret-id $secret --region $AWS_REGION --query "Versions[?contains(VersionStages,'AWSCURRENT')].CreatedDate" --output text | sort -r | head -n 1)
              
              # If the secret has never been changed, set the last_changed date to 0
              if [ -z "$last_changed" ]; then
                last_changed=0
              fi
            
              # Calculate the age of the secret in seconds
              age=$((current_timestamp - $(date -d "$last_changed" +%s)))

              # Check if there is an existing open issue to rotate the secret
              open_issue=$(gh issue list -R ministryofjustice/modernisation-platform --search "Rotate $secret in:title" --state open)
            
              # Check if the secret is older than the threshold and if there is an existing open issue to rotate it, if required raise a new issue
              if [ $age -gt $threshold ] && [ -z "$open_issue" ]; then
              echo "$secret secret is older than 180 days (age: $((age / (24 * 60 * 60))) days)"
              echo "Creating GitHub Issue to rotate $secret"
              gh issue create --title "Rotate $secret Credential" --label security --project "Modernisation Platform" --body "The [secrets-rotation-reminder workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) has identified that the $secret credential requires rotation as it is close to or exceeding the threshold of 180 days. 

              Consult [this documentation](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#how-to-rotate-secrets) which describes the process for rotation."
              else 
              echo "The $secret secret has not been identified for rotation (age: $((age / (24 * 60 * 60))) days)"
              fi
            done              