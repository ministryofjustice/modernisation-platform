---
name: core-vpc-preproduction-deployment

on:
  push:
    branches:
      - main
    paths:
      - 'environments-networks/*-preproduction.json'
      - '.github/workflows/core-vpc-preproduction-deployment.yml'
      - 'terraform/environments/**/networking.auto.tfvars.json'
      - 'terraform/environments/**/subnet-share.tf'
      - '!terraform/environments/core-*/**'
      - 'terraform/environments/core-vpc/**'
      - 'terraform/modules/core-monitoring/**'
      - 'terraform/modules/dns-zone/**'
      - 'terraform/modules/dns-zone-extend/**'
      - 'terraform/modules/vpc-tgw-routing/**'
      - 'terraform/modules/vpc-nacls/**'
      - 'terraform/modules/ram-resource-share/**'
      - 'terraform/modules/core-vpc-tgw-routes/**'
  pull_request:
    branches:
      - main
    paths:
      - 'environments-networks/*-preproduction.json'
      - '.github/workflows/core-vpc-preproduction-deployment.yml'
      - 'terraform/environments/**/networking.auto.tfvars.json'
      - 'terraform/environments/**/subnet-share.tf'
      - '!terraform/environments/core-*/**'
      - 'terraform/environments/core-vpc/**'
      - 'terraform/modules/core-monitoring/**'
      - 'terraform/modules/dns-zone/**'
      - 'terraform/modules/dns-zone-extend/**'
      - 'terraform/modules/vpc-tgw-routing/**'
      - 'terraform/modules/vpc-nacls/**'
      - 'terraform/modules/ram-resource-share/**'
      - 'terraform/modules/core-vpc-tgw-routes/**'
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: true
  TF_ENV: "preproduction"
  AWS_REGION: "eu-west-2"
  ENVIRONMENT_MANAGEMENT: ${{ secrets.MODERNISATION_PLATFORM_ENVIRONMENTS }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

defaults:
  run:
    shell: bash

jobs:
  core-vpc-preproduction-deployment-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false

      - name: Run core-vpc terraform plan
        run: |
          terraform --version
          # Test if this is a PR or PULL event

          #USE IF RUNNING IN GITHUB ACTIONS
          if [ ! -z ${{ github.event.pull_request.number }} ]
          then

          #USE IF USING ACT
          # if [ ! -z ${PULL_REQUEST_NUMBER} ]
          # then

          #CONFIGURE TERRAFORM AND WORKSPACE
          bash scripts/terraform-init.sh terraform/environments/core-vpc
          terraform -chdir="terraform/environments/core-vpc" workspace select "core-vpc-${TF_ENV}"

          #RUN TERRAFORM PLAN
          PLAN=`bash scripts/terraform-plan.sh terraform/environments/core-vpc "-target=module.vpc -target=module.vpc_tgw_routing -target=module.core-vpc-tgw-routes -target=module.dns-zone -target=module.dns_zone_extend -target=module.pagerduty_core_alerts" | tee /dev/stderr | grep '^Plan: \|^No changes.'`
          PLAN="> TERRAFORM PLAN RESULT - core-vpc - ${TF_ENV}
          ${PLAN}"
          bash scripts/update-pr-comments.sh "${PLAN}"
          fi
        env:
          SECRET: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}

  core-vpc-preproduction-deployment-apply:
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main'
    needs: [ core-vpc-preproduction-deployment-plan ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: "~1"
          terraform_wrapper: false

      - name: Run Terraform apply in terraform/environments/core-vpc
        run: |
          terraform --version
          bash scripts/terraform-init.sh terraform/environments/core-vpc
          terraform -chdir="terraform/environments/core-vpc" workspace select "core-vpc-${TF_ENV}"
          bash scripts/terraform-apply.sh terraform/environments/core-vpc -target=module.vpc
          echo "Target apply finished"
          bash scripts/terraform-apply.sh terraform/environments/core-vpc
          echo "Terraform apply finished"

      - name: Slack failure notification
        uses: 8398a7/action-slack@a189acbf0b7ea434558662ae25a0de71df69a435 # v3.14.0
        with:
          status: ${{ job.status }}
          fields: workflow,job,repo,commit,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}


  member-account-ram-association:
    runs-on: [ ubuntu-latest ]
    if: github.event.ref == 'refs/heads/main'
    needs: [ core-vpc-preproduction-deployment-apply ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          fetch-depth: 0

      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Get list of accounts in changed environments-networking files
        id: new_account
        run: |
          echo "::set-output name=files::$(git diff --no-commit-id --name-only --diff-filter=AM -r @^ | awk '{print $1}' | grep "environments-networks/.*.json" | xargs -I {} cat {} | jq '.cidr.subnet_sets[].accounts[]' -r | grep "\-${TF_ENV}" | uniq | tr \\n ,)"

      - name: Set RAM association for member account
        run: |
          accounts=(${{ steps.new_account.outputs.files }})
          if [ ! -z "${accounts}" ]
          then
          for i in ${accounts}
          do
          echo "[+] Setting up RAM association for ${i}"
          bash scripts/member-account-ram-association.sh ${i} ${TF_ENV}
          done
          else
          echo "[+] There were no AWS member accounts to process"
          exit 0
          fi

      - name: Slack failure notification
        uses: 8398a7/action-slack@a189acbf0b7ea434558662ae25a0de71df69a435 # v3.14.0
        with:
          status: ${{ job.status }}
          fields: workflow,job,repo,commit,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}
