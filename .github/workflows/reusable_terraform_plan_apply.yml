name: terraform plan apply
on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "Path to the directory where the workflow operates"
      environment:
        type: string
        required: false
        description: "Name of the environment, e.g. development"
      aws_region:
        required: false
        type: string
        default: "eu-west-2"
        description: "Specifies the AWS region"
      terraform_version:
        type: string
        required: false
        description: "The terraform version to use"
        default: "~1"
      workflow_id:   # This is the unique ID of the calling workflow
        description: 'Unique ID for the calling workflow'
        required: false
        type: string
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER:
        required: true
      PASSPHRASE:
        required: true

env:
  TF_IN_AUTOMATION: true
  TF_DESTROY_THRESHOLD: 10 # Sets a threshold to alert if the number of resources shown to be destroyed in the plan output is equal or threater than this number.
jobs:
  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@0442287e70970e2e732fbfecf17fd362d2d21dee # v3.2.6
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}
  plan-and-apply:
    runs-on: ubuntu-latest
    needs: fetch-secrets
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@0442287e70970e2e732fbfecf17fd362d2d21dee # v3.2.6
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          pagerduty_token: ${{ needs.fetch-secrets.outputs.pagerduty_token }}
          pagerduty_userapi_token: ${{ needs.fetch-secrets.outputs.pagerduty_userapi_token }}
          terraform_github_token: ${{ needs.fetch-secrets.outputs.terraform_github_token }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: set env variables
        run: |
          echo "TF_VAR_github_token=$TERRAFORM_GITHUB_TOKEN" >> $GITHUB_ENV
          echo "TF_VAR_pagerduty_token=$PAGERDUTY_TOKEN" >> $GITHUB_ENV
          echo "TF_VAR_pagerduty_user_token=$PAGERDUTY_USERAPI_TOKEN" >> $GITHUB_ENV

      - name: Set up variables
        id: vars
        if: ${{ inputs.environment }}
        run: |
          account_name=$(basename ${{ inputs.working-directory }})
          echo "ACCOUNT_NAME=${account_name}"  >> $GITHUB_ENV
          echo "WORKSPACE_NAME=${account_name}-${{ inputs.environment }}" >> $GITHUB_ENV
          # Check if test directory exists
          if [ ${GITHUB_REF} != 'refs/heads/main' ] && [ -d "${{ inputs.working-directory }}/test" ]; then
              echo "run_terratest=true" >> $GITHUB_OUTPUT
          fi
    
      - name: Setup Go
        if: ${{ steps.vars.outputs.run_terratest == 'true' }}
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: 1.21
          cache-dependency-path: "${{ inputs.working-directory }}/test/go.sum"

      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ inputs.aws_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "${{ inputs.terraform_version }}"
          terraform_wrapper: false

      - name: Initialize Terraform
        run: |
          bash scripts/terraform-init.sh ${{ inputs.working-directory }}

      - name: Terraform Workspace Select
        if: ${{ inputs.environment }}
        run: |
          terraform -chdir="${{ inputs.working-directory }}" workspace select ${WORKSPACE_NAME}

      - name: Run Terratest
        if: ${{ steps.vars.outputs.run_terratest == 'true' }}
        run: |
          pushd ${{ inputs.working-directory }}/test
          go mod tidy
          TEST=`go test | ${{ github.workspace }}/scripts/redact-output.sh | tee /dev/stderr | tail -n 1`
          popd
          TEST="> TERRATEST RESULT - ${ACCOUNT_NAME}
          ${TEST}"
          pwd
          ls
          bash scripts/update-pr-comments.sh "${TEST}"

      - name: Run Terraform Plan
        if: github.event.ref != 'refs/heads/main'
        id: show
        run: |
          bash scripts/terraform-plan.sh ${{ inputs.working-directory }}

      - name: Get Destroy Count
        if: github.event_name == 'pull_request'
        id: get_destroy_count
        env:
          destroy_threshold: ${{ env.TF_DESTROY_THRESHOLD }}
          plan_summary: ${{ steps.show.outputs.summary }}
        run: |
            bash scripts/get-terraform-destroy-count.sh

      - name: Post Warning & Check for Approval
        id: post_warning_check_approval
        if: github.event_name == 'pull_request'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          destroy_count: ${{ steps.get_destroy_count.outputs.destroy_count }}
          destroy_threshold: ${{ env.TF_DESTROY_THRESHOLD }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const orgName = 'ministryofjustice';
            const teamSlug = 'modernisation-platform';
            const destroyCount = parseInt(process.env.destroy_count, 10);
            const destroyThreshold = parseInt(process.env.destroy_threshold, 10);
            const summary = `\`${{ steps.show.outputs.summary }}\``;
            const workflowId = "${{ env.WORKSPACE_NAME }}";
            const identifier = workflowId ? `_${workflowId}_\n` : `_${{ inputs.workflow_id }}_\n`;

            if (destroyCount >= destroyThreshold) {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                event: 'REQUEST_CHANGES',
                body: `### :warning: Warning - Large Number of Resources to be Destroyed.\n ${identifier}${summary}\n Please review the plan and confirm the changes are expected.`
              });
            }

      - name: Post Comment
        if: github.event.ref != 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const workflowId = "${{ env.WORKSPACE_NAME }}";
            const identifier = workflowId ? `_${workflowId}_\n` : `_${{ inputs.workflow_id }}_\n`;
            const summary = `\`${{ steps.show.outputs.summary }}\``;
            const issue_number = context.payload.pull_request ? context.payload.pull_request.number : null;
            if (!issue_number) {
              console.log('No issue number found, skipping comment.');
              return;
            }
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number,
              body: `### Terraform Plan Summary\n${identifier}${summary}`
            });

      - name: terraform apply
        if: github.event.ref == 'refs/heads/main'
        run: bash scripts/terraform-apply.sh ${{ inputs.working-directory }}

      - name: Slack failure notification
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}
