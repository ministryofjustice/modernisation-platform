name: terraform plan apply
on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "Path to the directory where the workflow operates"
      environment:
        type: string
        required: false
        description: "Name of the environment, e.g. development"
      aws_region:
        required: false
        type: string
        default: "eu-west-2"
        description: "Specifies the AWS region"
      terraform_version:
        type: string
        required: false
        description: "The terraform version to use"
        default: "~1"
    secrets:
      modernisation_platform_environments:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
      pagerduty_token:
        required: false
      pagerduty_userapi_token:
        required: false
      gh_workflow_token: 
        required: false

env:
  ENVIRONMENT_MANAGEMENT: "${{ secrets.modernisation_platform_environments }}"
  TF_VAR_github_token: "${{ secrets.gh_workflow_token }}"
  TF_IN_AUTOMATION: true
  TF_VAR_pagerduty_token: ${{ secrets.pagerduty_token }}
  TF_VAR_pagerduty_user_token: ${{ secrets.pagerduty_userapi_token }}

jobs:
  plan-and-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up variables
        id: vars
        if: ${{ inputs.environment }}
        run: |
          account_name=$(basename ${{ inputs.working-directory }})
          echo "ACCOUNT_NAME=${account_name}"  >> $GITHUB_ENV
          echo "WORKSPACE_NAME=${account_name}-${{ inputs.environment }}" >> $GITHUB_ENV
          # Check if test directory exists
          if [ ${GITHUB_REF} != 'refs/heads/main' ] && [ -d "${{ inputs.working-directory }}/test" ]; then
              echo "run_terratest=true" >> $GITHUB_OUTPUT
          fi
    
      - name: Setup Go
        if: ${{ steps.vars.outputs.run_terratest == 'true' }}
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: 1.21
          cache-dependency-path: "${{ inputs.working-directory }}/test/go.sum"

      - name: Set Account Number
        run: |
          ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ inputs.aws_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "${{ inputs.terraform_version }}"
          terraform_wrapper: false

      - name: Initialize Terraform
        run: |
          bash scripts/terraform-init.sh ${{ inputs.working-directory }}

      - name: Terraform Workspace Select
        if: ${{ inputs.environment }}
        run: |
          terraform -chdir="${{ inputs.working-directory }}" workspace select ${WORKSPACE_NAME}

      - name: Run Terratest
        if: ${{ steps.vars.outputs.run_terratest == 'true' }}
        run: |
          pushd ${{ inputs.working-directory }}/test
          go mod tidy
          TEST=`go test | ${{ github.workspace }}/scripts/redact-output.sh | tee /dev/stderr | tail -n 1`
          popd
          TEST="> TERRATEST RESULT - ${ACCOUNT_NAME}
          ${TEST}"
          pwd
          ls
          bash scripts/update-pr-comments.sh "${TEST}"

      - name: Run Terraform Plan
        if: github.event.ref != 'refs/heads/main'
        run: |
          bash scripts/terraform-plan.sh ${{ inputs.working-directory }}

      - name: terraform apply
        if: github.event.ref == 'refs/heads/main'
        run: bash scripts/terraform-apply.sh ${{ inputs.working-directory }}

      - name: Slack failure notification
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # v2.0.0
        with:
          webhook-type: incoming-webhook
          payload: |
            {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
