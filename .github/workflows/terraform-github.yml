name: "Terraform: Create GitHub repositories and add access"

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/github/**'
      - '.github/workflows/terraform-github.yml'
  pull_request:
    branches:
      - main
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'terraform/github/**'
      - '.github/workflows/terraform-github.yml'
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: true

defaults:
  run:
    shell: bash

jobs:
  github-repository-create-plan:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.event_name != 'workflow_dispatch'
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_github_token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false
      - name: terraform init
        run: bash scripts/terraform-init.sh terraform/github
      - name: terraform plan
        run: bash scripts/terraform-plan.sh terraform/github
  github-repository-create-apply:
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_github_token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false
      - name: terraform init
        run: bash scripts/terraform-init.sh terraform/github
      - name: terraform plan
        run: bash scripts/terraform-plan.sh terraform/github
      # - name: terraform apply
      #   run: bash scripts/terraform-apply.sh terraform/github
      - uses: 8398a7/action-slack@v3
        name: Slack failure notification
        with:
          status: ${{ job.status }}
          fields: workflow,job,repo,commit,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && github.event.ref == 'refs/heads/main' }}
  github-repository-add-access-plan:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.event_name != 'workflow_dispatch'
    needs: [github-repository-create-apply]
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_github_token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false
      - name: terraform init
        run: bash scripts/terraform-init.sh terraform/github/repository-access
      - name: terraform plan
        run: bash scripts/terraform-plan.sh terraform/github/repository-access
  github-repository-add-access-apply:
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    needs: [github-repository-add-access-plan]
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_github_token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.0.1
          terraform_wrapper: false
      - name: terraform init
        run: bash scripts/terraform-init.sh terraform/github/repository-access
      - name: terraform plan
        run: bash scripts/terraform-plan.sh terraform/github/repository-access
      - name: terraform apply
        run: bash scripts/terraform-apply.sh terraform/github/repository-access
      - uses: 8398a7/action-slack@v3
        name: Slack failure notification
        with:
          status: ${{ job.status }}
          fields: workflow,job,repo,commit,message
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && github.event.ref == 'refs/heads/main' }}
