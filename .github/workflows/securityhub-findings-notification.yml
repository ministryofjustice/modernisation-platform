name: Notify Slack with SecurityHub Findings Summary

on:
  schedule:
    # trigger every weekday at 08:30am
    - cron: '30 8 * * 1-5'
  workflow_dispatch:

env:
  AWS_REGION: "eu-west-2"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

defaults:
  run:
    shell: bash

jobs:
  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@2d1bb8ef39861ede2999271b530cb9dd87f18004 # v3.3.1
    secrets:
        MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
        PASSPHRASE: ${{ secrets.PASSPHRASE }}
  generate-account-matrix:
    runs-on: ubuntu-latest
    needs: fetch-secrets
    outputs:
      matrix: ${{ steps.generate-account-matrix.outputs.matrix }}
    steps:
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@2d1bb8ef39861ede2999271b530cb9dd87f18004 # v3.3.1
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Generate Account Matrix from Secret
        id: generate-account-matrix
        run: |
          MATRIX_JSON=$(echo $ENVIRONMENT_MANAGEMENT | jq -c '[.account_ids | to_entries[] | {name: .key, id: .value}]')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
  process-security-findings:
    name: ${{ matrix.account.name }}
    runs-on: ubuntu-latest
    needs: [fetch-secrets, generate-account-matrix]
    strategy:
      matrix:
        account: ${{ fromJson(needs.generate-account-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@2d1bb8ef39861ede2999271b530cb9dd87f18004 # v3.3.1
        with:
          environment_management: ${{ needs.fetch-secrets.outputs.environment_management }}
          securityhub_slack_webhooks: ${{ needs.fetch-secrets.outputs.securityhub_slack_webhooks }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Determine Environment Config File
        id: derive-json-filename
        run: |
          FILENAME=$(echo "${{ matrix.account.name }}" | sed 's/-[^-]*$//').json
          echo "JSON filename: $FILENAME"
          echo "json_filename=$FILENAME" >> $GITHUB_OUTPUT
      - name: Check Slack Channel Configuration
        id: verify-slack-config
        run: |
          FILE_PATH="environments/${{ steps.derive-json-filename.outputs.json_filename }}"
          if [ -f "$FILE_PATH" ]; then
            if jq -e '.tags | has("securityhub-slack-channel")' "$FILE_PATH" > /dev/null; then
              echo "Slack channel configured in environment tags"
              CHANNEL=$(jq -r '.tags["securityhub-slack-channel"]' "$FILE_PATH")
              echo "channel_exists=true" >> $GITHUB_OUTPUT
              echo "channel_name=$CHANNEL" >> $GITHUB_OUTPUT
            else
              echo "No Slack channel configured in environment tags"
              echo "channel_exists=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Environment config file $FILE_PATH not found"
            echo "channel_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Retrieve Slack Webhook URL
        id: fetch-webhook-url
        if: steps.verify-slack-config.outputs.channel_exists == 'true'
        run: |
          echo "Using channel name: ${{ steps.verify-slack-config.outputs.channel_name }}"
          WEBHOOK=$(echo $SECURITYHUB_SLACK_WEBHOOKS | jq -r '.["${{ steps.verify-slack-config.outputs.channel_name }}"]')
          if [ "$WEBHOOK" = "null" ] || [ -z "$WEBHOOK" ]; then
            echo "No webhook found for this channel. Skipping."
            exit 0
          fi
          ACCOUNT_NUMBER=${{ matrix.account.id }}
          echo "::add-mask::$ACCOUNT_NUMBER"
          echo ACCOUNT_NUMBER=$ACCOUNT_NUMBER >> $GITHUB_ENV
          echo "webhook_url=$WEBHOOK" >> $GITHUB_OUTPUT
      - name: Configure AWS Credentials
        if: steps.fetch-webhook-url.outputs.webhook_url != ''
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions-securityhub-insights"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Analyze Security Hub Findings
        id: analyze-findings
        if: steps.fetch-webhook-url.outputs.webhook_url != ''
        run: |
          OUTPUT=$(bash ./scripts/extract-securityhub-severity-summary.sh)
          echo "output<<EOF" >> $GITHUB_OUTPUT
          echo "$OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Send severity summary to Slack
        if: steps.fetch-webhook-url.outputs.webhook_url != ''
        env:
          SLACK_WEBHOOK_URL: ${{ steps.fetch-webhook-url.outputs.webhook_url }}
          ACCOUNT_NAME: ${{ matrix.account.name }}
          ACCOUNT_NUMBER: ${{ env.ACCOUNT_NUMBER }}
        run: |
          MESSAGE="*Security Hub Severity Summary - $ACCOUNT_NAME ($ACCOUNT_NUMBER)*\n\`\`\`\n${{ steps.analyze-findings.outputs.output }}\n\`\`\`"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" "$SLACK_WEBHOOK_URL"