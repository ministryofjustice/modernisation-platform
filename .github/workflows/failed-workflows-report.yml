name: 'Generates Report of all Failed Workflows'

on:
    workflow_dispatch:
    schedule:
      - cron: '45 8 * * 1-5'

permissions:
    actions: read
    statuses: read  
    contents: read
    id-token: write

env:
    GITHUB_REPO: ${{ github.repository }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    REPORTING_PERIOD: "24" # This variable sets the number of hours against which the report will be compiled.

defaults:
  run:
    shell: bash

jobs:

  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@2d1bb8ef39861ede2999271b530cb9dd87f18004 # v3.3.1
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}  

  generate-report:
    runs-on: ubuntu-latest
    needs: fetch-secrets
    steps:

        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Decrypt Secrets
          uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@2d1bb8ef39861ede2999271b530cb9dd87f18004 # v3.3.1
          with:
            slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
            PASSPHRASE: ${{ secrets.PASSPHRASE }}

        # Creates a json file listing the latest action for a workflow that:
        #  - failed in the previous number of hours as set by $REPORTING_PERIOD, and
        #  - does not have a successful run.
        - name: Get Failed Workflows   
          id: get-failed-workflows
          run: |
            cd $GITHUB_WORKSPACE
            pwd
            chmod +x scripts/failed-workflows-report/get-failed-workflows.sh
            ./scripts/failed-workflows-report/get-failed-workflows.sh

        # Creates a JSON file with the markdown-formatted report for slack
        - name: Create the Slack Report
          if: ${{ steps.get-failed-workflows.outputs.sendreport == 'true' }}
          env:
            formatted_date: "${{ steps.get-failed-workflows.outputs.formatted_date }}"
          run: |
            chmod +x scripts/failed-workflows-report/create-slack-report.sh
            ./scripts/failed-workflows-report/create-slack-report.sh

        # Sends the json file to the MP Team via the slack webhook
        - name: Send Report via Slack
          if: ${{ steps.get-failed-workflows.outputs.sendreport == 'true' }}
          env:
            SLACK_WEBHOOK_URL: "${{ env.SLACK_WEBHOOK_URL}}"
          run: |
            chmod +x scripts/failed-workflows-report/send-report-via-slack.sh
            ./scripts/failed-workflows-report/send-report-via-slack.sh $SLACK_WEBHOOK_URL slack_message.json

        - name: Slack failure notification
          uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
          with:
            webhook-type: incoming-webhook
            payload: |
              {"blocks":[{"type": "section","text": {"type": "mrkdwn","text": ":no_entry: Failed GitHub Action:"}},{"type": "section","fields":[{"type": "mrkdwn","text": "*Workflow:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>"},{"type": "mrkdwn","text": "*Job:*\n${{ github.job }}"},{"type": "mrkdwn","text": "*Repo:*\n${{ github.repository }}"}]}]}
          if: ${{ failure() }}



