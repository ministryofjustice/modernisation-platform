name: Confirm Contacts for Environments

on:
  # Runs on the first day of each month at 9am
  schedule:
    - cron: '0 9 1 * *'
  # Allows for manual exec
  workflow_dispatch:

env:
    GITHUB_REPO: ${{ github.repository }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
    TEMPLATE_ID: "1f0f5ccc-0f67-4ee2-942f-6e48804828ea"
    EXPECTED_TEMPLATE_VERSION: 1 # Set the expected template version here
    PERIOD: "6" # This variable determines the number of months we look back for created dates. For production it will be 6.

permissions:
    id-token: write

defaults:
  run:
    shell: bash

jobs:

  fetch-secrets:
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@2d1bb8ef39861ede2999271b530cb9dd87f18004 # v3.3.1
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}  

  confirm-contacts-for-environments:
    runs-on: ubuntu-latest
    needs: fetch-secrets

    permissions:
      issues: write     
      contents: read
      repository-projects: read
 
    steps:

      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # Step 1.1: Decrypt Secrets  
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@2d1bb8ef39861ede2999271b530cb9dd87f18004 # v3.3.1
        with:
          gov_uk_notify_api_key: ${{ needs.fetch-secrets.outputs.gov_uk_notify_api_key }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      # Step 2: Setup Python
      - name: Install Python
        uses: actions/setup-python@v5.3.0 # Need to add this to dependabot
        with:
          python-version: '3.10' # Note - we need a means to check these python versions and keep them current.

      - name: Install the Notifications Client
        run: pip install notifications-python-client
        
      # Step 3: Validate Notify Template Version
      - name: Validate Notify Template Version
        env:
          API_KEY: ${{ env.GOV_UK_NOTIFY_API_KEY }}
          TEMPLATE_ID: ${{ env.TEMPLATE_ID }}
          EXPECTED_TEMPLATE_VERSION: ${{ env.EXPECTED_TEMPLATE_VERSION }}
        run: |
          python <<EOF
          from notifications_python_client.notifications import NotificationsAPIClient
          import sys

          api_key = "${{ env.GOV_UK_NOTIFY_API_KEY }}"
          template_id = "${{ env.TEMPLATE_ID }}"
          expected_version = int("${{ env.EXPECTED_TEMPLATE_VERSION }}")

          client = NotificationsAPIClient(api_key)
          try:
              template_details = client.get_template(template_id)
              actual_version = template_details.get("version")
              if actual_version != expected_version:
                  print(f"Error: Template version mismatch! Expected: {expected_version}, Actual: {actual_version}")
                  sys.exit(1)
              print(f"Template version {actual_version} validated successfully.")
          except Exception as e:
              print(f"Failed to fetch template details: {e}")
              sys.exit(1)
          EOF

      # Step 4: Get Environment Owners
      - name: Get Environment Owners         
        run: |
          cd $GITHUB_WORKSPACE
          pwd
          ./scripts/confirm-environment-owner/get-environment-owners.sh

      # Step 5: Create GitHub Issue and Notify Owners
      - name: Create Issue and Notify Owner  
        env:
          API_KEY: ${{ env.GOV_UK_NOTIFY_API_KEY }}
          TEMPLATE_ID: ${{ env.TEMPLATE_ID }}
        run: |
          cd $GITHUB_WORKSPACE
          pwd
          chmod +x scripts/confirm-environment-owner/create-confirm-owner-issue.sh
          ./scripts/confirm-environment-owner/create-confirm-owner-issue.sh
