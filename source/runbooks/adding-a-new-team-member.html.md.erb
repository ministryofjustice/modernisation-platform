---
owner_slack: "#modernisation-platform"
title: Adding a new team member to the Modernisation Platform
last_reviewed_on: 2023-11-16
review_in: 6 months
---

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-NXTCMQ7ZX6"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-NXTCMQ7ZX6');
</script>

# <%= current_page.data.title %>

There are a few things to do when a new team member joins:

1. Add them to the team page
2. Add them to our GitHub team

    If they need access to our AWS landing zone:

3. (Optional) Add them as a superadmin to our AWS landing zone

## Adding them to the team page

To add them to our team page, update the file at [source/team/team.html.md.erb](https://github.com/ministryofjustice/modernisation-platform/blob/main/source/team/team.html.md.erb) with:

- their name and job title
- an updated count of team members

Submit a pull request and when it's merged, they will appear on [our team page](../team/team.html).

>You can view a [sample PR](https://github.com/ministryofjustice/modernisation-platform/pull/376) in case you get stuck.

## Adding them to our GitHub team

To add them to our GitHub team, update the file at [terraform/github/locals.tf](https://github.com/ministryofjustice/modernisation-platform/blob/main/terraform/github/locals.tf) with:

- their GitHub username either in:
  - the `general_members` list, if they don't need access to AWS
  - the `engineers` list, if they do need access to AWS via AWS SSO

If they are a GitHub organisation owner, add them to the `maintainers` list too. This is because GitHub will return their role as a `maintainer`, because GitHub organisation owners always have those permissions.

>You can view a [sample PR](https://github.com/ministryofjustice/modernisation-platform/pull/382) in case you get stuck.

## Adding them as a superadmin in our AWS landing zone

To add them as a superadmin in our AWS landing zone, add their `firstname.lastname` in the [modernisation-platform-terraform-iam-superadmins](https://github.com/ministryofjustice/modernisation-platform-terraform-iam-superadmins) `main.tf` file.
You can optionally add a Keybase username to obtain the initial password as a PGP encrypted output.

>You can view a [sample PR](https://github.com/ministryofjustice/modernisation-platform-terraform-iam-superadmins/pull/21) in case you get stuck.

Once your PR has been merged, create a new GitHub release for the IAM superadmins module [sample release](https://github.com/ministryofjustice/modernisation-platform-terraform-iam-superadmins/releases).

In your local Modernisation Platform repository clone:

- Update the module reference [sample PR](https://github.com/ministryofjustice/modernisation-platform/pull/389)
- `cd` into [modernisation-platform/terraform/modernisation-platform-account](https://github.com/ministryofjustice/modernisation-platform/tree/main/terraform/modernisation-platform-account)
- Run `terraform plan` with your superuser credentials to check the new user will be successfully added
- Complete a pull request to allow the CI workflow to conduct `terraform apply` and add the new IAM user.

Once their IAM user has been created, log into the [AWS console](https://console.aws.amazon.com/billing/home?region=eu-west-2#/) yourself and:

- switch into the `superadmin` role in the Modernisation Platform account
- go to their IAM user in [IAM Users](https://console.aws.amazon.com/iam/home?region=eu-west-2#/users)
- go to the Security Credentials tab
- call the user and assign an MFA device with them
- configure console access with an autogenerated password and require a password reset on their next login
