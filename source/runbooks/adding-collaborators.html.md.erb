---
owner_slack: "#modernisation-platform"
title: Adding collaborators to Modernisation Platform accounts
last_reviewed_on: 2022-05-24
review_in: 6 month
---

# <%= current_page.data.title %>

Collaborators are defined as GitHub users which are not part of the `ministryofjustice` GitHub organisation.
Users who are part of the organisation are added to the platform by joining a [GitHub team](../user-guide/creating-environments.html#github-team-slug).

To enable collaborators to use the Modernisation Platform we need to give them the following access:

- Access to our Github repositories
- Access to the relevant AWS accounts
- Access to be able to approve deployments

## Access to our Github repositories

In order to create infrastructure, collaborators will need to have `push` permissions to the following repositories:

- [modernisation-platform-environments](https://github.com/ministryofjustice/modernisation-platform-environments)
- [modernisation-platform-ami-builds](https://github.com/ministryofjustice/modernisation-platform-ami-builds) (only needed if building AMIs)

Please follow the instructions in the MoJ [github-collaborators](https://github.com/ministryofjustice/github-collaborators) repository on how to add them.

Under "reason" please put the name of the Modernisation Platform application that they require access to.

## Access to the relevant AWS accounts

Add the collaborators to the [collaborators.json](https://github.com/ministryofjustice/modernisation-platform/collaborators.json) file.

Valid access levels are `read-only` (read only access) and `developer` (read only plus additional permissions detailed [here](../user-guide/creating-environments.html#developer))

The modernisation-platform-account workflow will create the users when a pull request with these changes is merged.

Once their IAM user has been created, log into the AWS console yourself and:

- switch into the superadmin role in the Modernisation Platform account
- go to their IAM user in IAM Users
- go to the Security Credentials tab
- configure console access with an autogenerated password and require a password reset on their next login
- the user will need to assign an MFA device on first log in

#### Example file entries

```
{
  "users": [
    {
      "username": "test-collaborator-1",
      "github-username": "test-github-1",
      "accounts": [
        {
          "account-name": "sprinkler-development",
          "access": "read-only"
        },
        {
          "account-name": "sprinkler-development",
          "access": "developer"
        },
        {
          "account-name": "testing-test",
          "access": "read-only"
        }
      ]
    },
    {
      "username": "test-collaborator-2",
      "github-username": "test-git-2",
      "accounts": [
        {
          "account-name": "sprinkler-development",
          "access": "read-only"
        }
      ]
    }
  ]
}
```

#### Diagram

![Collaborators](../images/collaborators.png)

## Access to be able to approve deployments

The limit of the number of reviewers (teams or users) which can be added to a GitHub environment is [six](https://docs.github.com/en/rest/reference/deployments#create-or-update-an-environment--parameters).
Two of these spaces will be taken by the application GitHub team and by the Modernisation Platform GitHub team leaving only four spaces to add collaborators.
For this reason collaborator environment reviewers should be manually added to the environment. (Note - the reviewer will be automatically removed when the collaborators permissions to the repository are removed.)

1. Navigate to [modernisaton-platform-environments -> settings -> environments](https://github.com/ministryofjustice/modernisation-platform-environments/settings/environments)
1. Find the required environment and click on it
1. Under `Environment protection rules` add the required collaborators
1. Click `Save protection rules`

## Removing collaborators

To remove collaborators reverse the above steps.

In order to remove the collaborator IAM user, the Terraform in `modernisation-platform/terraform/modernisation-platform-account` must be run locally as a `superadmin` user, as the pipelines do not have permissions to delete users.
