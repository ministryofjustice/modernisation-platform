---
owner_slack: "#modernisation-platform"
title: Revoking User Access
last_reviewed_on: 2024-02-09
review_in: 6 month
---

# <%= current_page.data.title %>

## Introduction

In the event of a cyber attack or similar malicious activity e.g. some user credentials are compromised, there may be a requirement to revoke user access on the Modernisation Platform (MP).

This page attempts to break down the various users/identities that exist on MP and explain what you would need to do to revoke access.

## Individual Users

### MOJ Member Access

MP members who are MOJ employees access environments using [AWS SSO](https://user-guide.modernisation-platform.service.justice.gov.uk/concepts/environments/single-sign-on.html#single-sign-on)
which links GitHub Teams to various roles/environments.

Removing user access from GitHub Teams etc. is the responsibility of the relevant application team as explained [here](https://user-guide.modernisation-platform.service.justice.gov.uk/user-guide/our-offer-to-you.html#what-we-expect-from-application-teams),
however you could contact the [Ops Engineering](https://moj.enterprise.slack.com/archives/C01BUKJSZD4) team who manage our GitHub organisation who will be able to revoke access.

### Collaborator Access 

[Collaborator access](https://user-guide.modernisation-platform.service.justice.gov.uk/user-guide/working-as-a-collaborator.html#working-as-a-collaborator) 
is for non-MOJ employees who require access to AWS. These users are defined in the [collaborators.json](https://github.com/ministryofjustice/modernisation-platform/blob/main/collaborators.json) file.

Use [this guide](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/adding-collaborators.html#removing-collaborators)
to remove a collaborator (**NB** the Terraform must be run locally as a superadmin user)

### Mod Platform Team Access

MP team members access environments using AWS SSO and in very few circumstances via [Superadmin access](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/accessing-aws-accounts.html#superuser-account-access)

Removing access for MP team members is documented [here](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/removing-a-team-member.html)

### MOJ Master Users

There are a limited set of users who have access to the Root account ("MOJ Master") for the organisation.

These users are not managed through code so another root user would need to log in to the account to revoke the compromised users' access.

## Teams

GitHub Teams are linked to AWS environments via the `environment/*.json` files in the [MP repo](https://github.com/ministryofjustice/modernisation-platform/tree/main/environments).

To remove a teams' access/association with an AWS environment:

1. Edit the relevant `environment/*.json` file by removing the team name from the `github_slug` definition for the particular environment

    e.g. `"github_slug": "modernisation-platform",` becomes  `"github_slug": "",`

1. Note that only one change to a `environment/*.json` file can be made per PR/run due to current constraints around how the automation works.
1. Raise a PR and once merged the scheduled baseline job will run to update the access accordingly.

## Automation Users (roles/identities)

### OIDC CI/CD Role

To allow automated access to our AWS accounts we provide a “OIDC CI/CD” role - `modernisation-platform-oidc-cicd` in every account which is 
explained in more detail [here](https://user-guide.modernisation-platform.service.justice.gov.uk/user-guide/deploying-your-application.html#deploying-your-application)

Revoking access for 

## Risks/Caveats

This runbook describes how to revoke access through code which will permanently revoke access in the cleanest manner.
In some cases this **would not** be the quickest way to revoke access.

Depending on the severity of the compromise there should be some thought around 
whether it would be better to **temporarily use "clickops" to remove access** before code changes can be released or whether there should be a
automated mechanism (pipeline etc.) which can temporarily quarantine a user identity while a security incident is being investigated.