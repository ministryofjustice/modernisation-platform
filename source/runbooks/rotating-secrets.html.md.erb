---
owner_slack: "#modernisation-platform"
title: How to Rotate Secrets
last_reviewed_on: 2025-06-02
review_in: 6 months
---

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-NXTCMQ7ZX6"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-NXTCMQ7ZX6');
</script>

# <%= current_page.data.title %>

## Introduction

We don't have many secrets on stored on the Modernisation Platform, but they are rotated regularly, every 180 days.

This guide advises where secrets are stored and how to rotate them.

| Name                                                                     | Secret Name                          | <div style="width:290px">Usage</div>                                                                                                                                                                                                   | Location                | How to rotate <div style="width:290px">property</div>                                                                                                                                                                                    | Days to rotate |
| ------------------------------------------------------------------------ | ------------------------------------ | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- |
| PagerDuty Organisation Level Token                                       | pagerduty_token                      | Used by PagerDuty Terraform to manage most PagerDuty resources                                                                                                                                                                          | AWS Secrets Manager     | Contact Operations Engineering to issue a new token and update the secret.                                                                                                                                                               | 180            |
| PagerDuty User Level API Token                                           | pagerduty_userapi_token              | PagerDuty api user level token, used to link services to Slack channels. A valid PD and Slack user needed (to authorise against a slack user), needed in addition to the org level token                                                | AWS Secrets Manager     | Log in to PagerDuty as your user, create the token and authorise it against Slack                                                                                                                                                        | 180            |
| PagerDuty Integration Keys                                               | pagerduty_integration_keys           | Map of integration keys generated and updated by Terraform PagerDuty integration resources when users create services, used to push alerts to those services                                                                            | AWS Secrets Manager     | Destroy and recreate the PagerDuty integration resource in Terraform                                                                                                                                                                     | 180            |
| PagerDuty Modernisation Platform Team user                               | N/A                                  | Used for dead-end notifications as all schedules need a user                                                                                                                                                                            | Not stored              | Use password reset process if needed                                                                                                                                                                                                     | N/A            |
| Slack Webhook URL                                                        | slack_webhook_url                    | Used to post alarms to Slack                                                                                                                                                                                                            | AWS Secrets Manager     | Use this [runbook](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#slack-webhook-url) to rotate the secret                                                                               | 180            |
| GitHub MP CI User PAT                                                    | github_ci_user_pat                   | Used to create PRs etc in GitHub actions and deploy GitHub resources via Terraform                                                                                                                                                      | AWS Secrets Manager     | Use this [runbook](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#github-mp-ci-user-pat-or-github-mp-ci-user-environments-repo-pat-or-modernisation-pat-multirepo) to rotate the secret | 180            |
| GitHub MP CI User Environments Repo PAT                                  | github_ci_user_environments_repo_pat | Used in reusable pipelines of the modernisation-platform-environments repository. This is so that the CI user can post comments in PRs, e.g. tf plan/apply output.                                                                      | AWS Secrets Manager     | Use this [runbook](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#github-mp-ci-user-pat-or-github-mp-ci-user-environments-repo-pat-or-modernisation-pat-multirepo) to rotate the secret | 180            |
| GitHub MP CI User Password                                               | github_ci_user_password              | Used to log in and set the PAT                                                                                                                                                                                                          | AWS Secrets Manager     | Log in to GitHub as the user and reset the password, update the secret                                                                                                                                                                   | 180            |
| Environment Management                                                   | environment_management               | A Map of account names to IDs, and data for environment management, such as organizational unit IDs                                                                                                                                     | AWS Secrets Manager     | Does not need rotating, not really a secret and regenerated on each account creation                                                                                                                                                     | N/A            |
| Nuke ID List                                                             | nuke_account_ids                     | Account IDs to be auto-nuked on weekly basis. This secret is used by GitHub actions job nuke.yml inside the environments repo, to find the Account IDs to be nuked.                                                                     | AWS Secrets Manager     | Not really a secret, should not be rotated                                                                                                                                                                                               | N/A            |
| Nuke Block List                                                          | nuke_account_blocklist               | Account IDs to be excluded from auto-nuke. AWS-Nuke (https://github.com/rebuy-de/aws-nuke) requires at least one Account ID to be present in this blocklist, while it is recommended to add every production account to this blocklist. | AWS Secrets Manager     | Not really a secret, should not be rotated                                                                                                                                                                                               | N/A            |
| Circle CI ID                                                             | mod-platform-circleci                | CircleCI organisation ID for ministryofjustice, used for OIDC IAM policies                                                                                                                                                              | AWS Secrets Manager     | Not really a secret, should not be rotated                                                                                                                                                                                               | N/A            |
| Modernisation PAT MultiRepo                                              | modernisation_pat_multirepo          | Used in pipelines of the modernisation-platform repository. This is so that the CI user can read/write issues and read/update the github secrets                                                                                        | AWS Secrets Manager     | Use this [runbook](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#github-mp-ci-user-pat-or-github-mp-ci-user-environments-repo-pat-or-modernisation-pat-multirepo) to rotate the secret | 180            |
| ModernisationPlatformOrganisationManagement IAM user in MoJ root account | N/A                                  | Used to perform limited activities in the root account. No longer used as replaced by OIDC but user kept for break glass purposes.                                                                                                       | Not stored              | No active access keys, if keys or password needed contact Operations Engineering                                                                                                                                                         | N/A            |
| Modernisation Platform Account Root User Password                        | N/A                                  | Only used during initial platform set up, log in prevented via SCP and no password or keys set                                                                                                                                          | Not stored              | Disable or move account to a non SCP protected OU and follow the password reset steps                                                                                                                                                    | N/A            |
| AWS User access & secret keys                                            | N/A                                  | Used by IAM users which fall outside of the scope of SSO for programmatic access. EG. Collaborators, 3rd party applications                                                                                                             | AWS IAM User Access Key | Create a new key pair and share with the user. Once they have confirmed the new key is in use remove the old key.                                                                                                                        | 180            |
| AWS SSO Entra ID                                                         | azure_entraid_oidc                   | Used for authenticating users to AWS with their justice accounts through federated SSO with Azure Entra ID.                                                                                                                             | AWS Secrets Manager     | Use this [runbook](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#aws-sso-entraid) to rotate the secret                                                                                 | 180            |
| Entra ID SCIM sync                                                       | entra_id_aws_connectivity_details    | Used for accessing EntraID in order to perform user sync                                                                                                                                                                                | AWS Secrets Manager     | Use this [runbook](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#aws-sso-entra-id) to rotate the secret                                                                                | 180            |
| Cortex Xsiam IAM User Access Key                                         | xsoar                                | Used by the Cortex Xsiam platform to connect to Modernisation Platform Accounts. The IAM user (XsoarIntegration) is located in the MOJ Master account.                                                                                  | AWS Secrets Manager     | Use this [runbook](https://user-guide.modernisation-platform.service.justice.gov.uk/runbooks/rotating-secrets.html#cortex-xsiam-user-account-access-key) to rotate the secret                                                            | 180            |


## Runbooks

### GitHub MP CI User PAT or GitHub MP CI User Environments Repo PAT or Modernisation PAT MultiRepo

This runbook describes the process for rotating the **github_ci_user_pat** or **github_ci_user_environments_repo_pat** or **modernisation_pat_multirepo** secrets.

1. Retrieve the MP GitHub credentials by logging in to the AWS [Modernisation Platform account](https://moj.awsapps.com/start#/) with **AdministratorAccess**
1. Navigate to the Secrets Manager [github_ci_user_password](https://eu-west-2.console.aws.amazon.com/secretsmanager/secret?name=github_ci_user_password&region=eu-west-2) secret and click `Retrieve secret value`
1. Use the credentials provided to log in to [GitHub](https://github.com)
1. Once logged in click on the profile icon and then **Settings > Developer settings > Personal access tokens > Tokens (Fine-grained tokens)** and select the relevant token
1. Click `Regenerate token` and then copy the token to your clipboard
1. Navigate to the Secrets Manager [github_ci_user_pat](https://eu-west-2.console.aws.amazon.com/secretsmanager/secret?name=github_ci_user_pat&region=eu-west-2) or [github_ci_user_environments_repo_pat](https://eu-west-2.console.aws.amazon.com/secretsmanager/secret?name=github_ci_user_environments_repo_pat&region=eu-west-2) secret and click `Retrieve secret value`
1. Click `Edit` and replace the token with the new one and click `Save`
1. Wait for another workflow to run which uses the secret to confirm that the new token has taken effect successfully. (The secrets status will show as _"Last used within the last week"_)

### Slack Webhook URL

This runbook describes the process for rotating the **slack_webhook_url** secret.

1. Log into the [Slack API](https://api.slack.com/apps)
1. Select `Modernisation Platform Alerts` App Name from your apps, then choose `Incoming Webhooks`.
1. From there, click on `Add New Webhook to the Workspace`, and select 'modernisation-platform' as the channel name.
1. Copy the Webhook URL and replace it in both [GitHub secrets](https://github.com/ministryofjustice/modernisation-platform/settings/secrets/actions/SLACK_WEBHOOK_URL) and also in the [secrets manager]().
1. Navigate to the Secrets Manager [slack_webhook_url](https://eu-west-2.console.aws.amazon.com/secretsmanager/secret?name=slack_webhook_url&region=eu-west-2) secret and click `Retrieve secret value`
1. Click `Edit` and replace the secret value with the new one and click `Save`
1. Wait for another workflow to run which uses the secret to confirm that the new token has taken effect successfully. (The secrets status will show as _"Last used within the last week"_)

### AWS SSO Entra ID

1. **Log into the Azure Portal**
    - Navigate to [Azure Portal](https://portal.azure.com).
    - Use your `justice.gov.uk` credentials to sign in.

1. **Locate the Application or Service**
    - Go to **Microsoft Entra ID** > **App registrations**.
    - Search for the relevant application, such as `justicedigital-panda-awsidentitycenter`.

1. **Access Certificates & Secrets**
    - Click on the application.
    - In the left-hand menu, select **Certificates & secrets**.

1. **Add a New Secret**
    - Under **Client secrets**, click **+ New client secret**.
    - Enter a description and select the expiration period (e.g., 6 months).
    - Click **Add** and copy the generated secret value immediately.

1. **Update AWS Secrets Manager**
    - Update the following secrets as appropriate:
        - **`azure_entraid_oidc`** – Enables users to log into AWS with their justice.gov.uk accounts via federated authentication from Azure Entra ID using OIDC.
        - **`entra_id_aws_connectivity_details`** – Used by the Azure SCIM Lambda to securely authenticate and interact with Azure Entra ID APIs for automated user and group provisioning between Azure and AWS.
    - Navigate to the [AWS Secrets Manager](https://eu-west-2.console.aws.amazon.com/secretsmanager/home?region=eu-west-2).
    - Locate the relevant secret (e.g., `azure_entraid_oidc` or `entra_id_aws_connectivity_details`).
    - Click **Retrieve secret value** to view the current configuration.
    - Click **Edit**, replace the old secret value with the newly generated client secret, and click **Save**.

1. **Verify Functionality**
    - Test the application or service to confirm that it works with the new secret.

1. **Remove the Old Secret**
    - Once the new secret is fully functional, delete the old one to prevent misuse.
    - Click the **Delete** icon next to the old secret.

### Cortex Xsiam User Account Access Key

1. Request one of the root account admins to create a new access key for the user `XsoarIntegration` that is located in the MoJ Master account.
1. Once created, add the two key values (secret ID and secret key) to the secret named `xsoar` that is located in the Modernisation Platform account.
1. Get in touch with the Monitoring and Integration Team via their team email address (see [runbook doc](integration-with-protective-monitoring.html)) and confirm a new access key has been created.
1. Share the new access keys via email, sending each of the two parts as separate emails.
1. ** Once the Cortex Xsiam team have confirmed the new key has been applied and is working without error: **
   - Ask a root account admin to delete the old key from the IAM user.
   - Delete the old key from the `xsoar` secret.
